name: Lint and build MapServer API and React client

on:
  push:
    branches:
      - main

jobs:
  build-client:
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: react-client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node.js dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: react-client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/react-client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for React client
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run ESLint check
        run: npm run eslint:check

      - name: Build React client
        run: npm run build

  build-api:
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: MapServer

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache .NET packages
        id: cache-dotnet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.local/share/NuGet/Cache
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Install dependencies for .NET API
        run: dotnet restore

      - name: Set environment variables
        run: echo "ASPNETCORE_ENVIRONMENT=CI" >> $GITHUB_ENV

      - name: Build .NET API
        run: dotnet build --configuration Release --no-restore
